[Network - EASM - TLS Certificate Expiring Soon - Rule]
disabled = 1
action.correlationsearch.enabled = 1
action.correlationsearch.label = EASM - TLS Certificate Expiring Soon
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.drilldown_name = View recent TLS certificate events relating to $subject_cn$
action.notable.param.drilldown_search = `easm_index` sourcetype="easm:tls_cert"  subject_cn="$subject_cn$"
action.notable.param.extract_artifacts = {"asset":["hostname","ip"],"identity":[]}
action.notable.param.rule_description = The TLS certificate with common name $subject_cn$ is expiring in $days_remaining$ days.
action.notable.param.rule_title = EASM - TLS Certificate Expiring Soon ($subject_cn$ - $days_remaining$ days)
action.notable.param.security_domain = network
action.notable.param.severity = medium
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = subject_cn
alert.suppress.period = 604800s
alert.track = 1
counttype = number of events
cron_schedule = 43 6 * * *
description = Alerts when a TLS certificate has an expiry date of less than 30 days
dispatch.earliest_time = -24h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `easm_index` sourcetype="easm:tls_cert" \
| dedup easm.entity, hostname \
| eval not_after_epoch = strptime(not_after,"%Y-%m-%dT%H:%M:%SZ") \
| where (not_after_epoch-now()) < 2592000 AND not_after_epoch >= now() \
| eval days_remaining = round((not_after_epoch-now())/86400,0) \
| sort days_remaining\
| table easm.entity, days_remaining subject_cn, subject_an, days_remaining, hostname, issuer_dn, issuer_org{}, ip\
| rename easm.entity as entity, *{} as *

[Network - EASM - Newly Discovered Subdomain - Rule]
disabled = 1
action.correlationsearch.enabled = 1
action.correlationsearch.label = EASM - Newly Discovered Subdomain
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.extract_artifacts = {"asset":["ip","hostname"],"identity":[]}
action.notable.param.rule_description = The subdomain $hostname$ was discovered via $discovery_source$ and has not been seen previously. The IP at time of discovery was $ip$
action.notable.param.rule_title = EASM - Newly Discovered Subdomain ($hostname$)
action.notable.param.security_domain = network
action.notable.param.severity = medium
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = hostname
alert.suppress.period = 86400s
alert.track = 1
counttype = number of events
cron_schedule = * * * * *
description = Alerts when a subdomain is found that has not been seen previously.
dispatch.earliest_time = -24h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `get_all_discovered_subdomains` \
| where first_seen=last_seen \
| sort - last_seen \
| table entity, hostname, ip, discovery_source

[EASM - Update discovered_web_services Lookup]
disabled = 1
action.email.useNSSubject = 1
action.lookup = 1
action.lookup.filename = discovered_web_services.csv
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 7 * * * *
dispatch.earliest_time = -120m
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = app_for_easm
request.ui_dispatch_view = search
search = `get_all_discovered_web_services`

[EASM - Update discovered_open_ports Lookup]
action.email.useNSSubject = 1
action.lookup = 1
action.lookup.filename = discovered_open_ports.csv
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 7 * * * *
dispatch.earliest_time = -120m
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = app_for_easm
request.ui_dispatch_view = search
search = `get_all_discovered_open_ports`

[EASM - Update discovered_subdomains Lookup]disabled = 1
action.email.useNSSubject = 1
action.lookup = 1
action.lookup.filename = discovered_subdomains.csv
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 7 * * * *
dispatch.earliest_time = -120m
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = app_for_easm
request.ui_dispatch_view = search
search = `get_all_discovered_subdomains`
